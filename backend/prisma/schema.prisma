// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
 

// DB Tables

model User{
  id String @id @default(cuid())
  firstname String
  email String @unique
  password String
  age Int?
  role Role @default(student)
  gender String?
  isPrefect Boolean? @default(false)
  guardian Guardian[]
  class Class[]
  address UserAddress[]
  profilePic String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// model Students{
//   id String @id @default(cuid())
//   class Class @relation(fields: [classId], references: [id])
//   classId String
//   isPrefect Boolean @default(false)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

model Guardian{
  id String @id @default(cuid())
  father String?
  mother String?
  other String?
  student User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserAddress{
  id String @id @default(cuid())
  phoneNumber String
  GPS String
  NearestLandMark String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Class{
  id String @id @default(cuid())
  classType classCategory @default(Primary)
  student User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  teacher String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model School{
  id String @id @default(cuid())
  schoolName String
  email String @unique
  password String
  phoneNumber String?
  dateOfestablishment String?
  address SchoolAddress[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model SchoolAddress{
  id String @id @default(cuid())
  school School @relation(fields: [schoolId], references: [id], onDelete: Cascade)
  schoolId String
  location String[]
  POBox String
  website String?
  GPS String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  superAdmin
  admin
  student
  teacher
  headmaster
  proprietor
  nonteaching
}

enum classCategory {
  Nursery
  Primary
  JuniorHigh
}