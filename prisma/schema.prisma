// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// DB Tables

model User{
  id String @id @default(cuid())
  firstname String
  email String @unique
  password String
  age Int?
  role Role @default(student)
  address UserAddress[]
  profilePic String?
  guardian Guardian[]
  class Class[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Guardian{
  id String @id @default(cuid())
  father String
  mother String
  other String
  user User @relation(fields: [userId], references: [id])
  userId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserAddress{
  id String @id @default(cuid())
  phoneNumber String
  GPS String
  NearestLandMark String
  user User @relation(fields: [userId], references: [id])
  userId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Class{
  id String @id @default(cuid())
  classType String
  numOfStudents Int
  teacher Role
  user User @relation(fields: [userId], references: [id])
  userId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model School{
  id String @id @default(cuid())
  schoolName String
  dateOfestablishment DateTime
  address SchoolAddress[]
  NumOfStudents Int
  NumOfTeachers Int
  NumOfNonTeachingStaff Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model SchoolAddress{
  id String @id @default(cuid())
  school School @relation(fields: [schoolId], references: [id])
  schoolId String
  location String[]
  POBox String
  email String
  website String?
  GPS String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  student
  teacher
  headmaster
  proprietor
  nonteaching
}